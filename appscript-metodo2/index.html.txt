<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Escáner QR</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://unpkg.com/html5-qrcode@2.3.8/html5-qrcode.min.js"></script>
  <style>
    .alert-message {
      position: fixed;
      top: 20px;
      left: 50%;
      transform: translateX(-50%);
      padding: 10px 20px;
      border-radius: 5px;
      font-size: 16px;
      z-index: 1000;
      opacity: 1;
      transition: opacity 0.5s ease-in-out;
    }
    .alert-warning {
      background-color: #ffcc00;
      color: #000;
    }
    .alert-success {
      background-color: #28a745;
      color: #fff;
    }
  </style>
</head>
<body class="bg-light">
  <div class="container text-center mt-5">
    <h2 class="mb-4">Escáner de Código QR</h2>
    <div id="qr-reader" class="border rounded p-3 bg-white" style="width: 100%; max-width: 400px; margin: auto;"></div>
    <div id="qr-reader-results" class="mt-3"></div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const resultContainer = document.getElementById("qr-reader-results");

      const html5QrcodeScanner = new Html5QrcodeScanner(
        "qr-reader", { fps: 10, qrbox: { width: 250, height: 250 } }
      );

      // Función para mostrar mensajes de alerta
      function showAlert(message, type) {
        const alertDiv = document.createElement("div");
        alertDiv.className = `alert-message ${type}`;
        alertDiv.textContent = message;
        document.body.appendChild(alertDiv);

        setTimeout(() => {
          alertDiv.style.opacity = "0";
          setTimeout(() => alertDiv.remove(), 500);
        }, 2000); // Mostrará la alerta por 2 segundos
      }

      // Variable para evitar múltiples escaneos del mismo código
      let isScanning = false;

      function onScanSuccess(decodedText) {
        if (isScanning) return; // Evitar múltiples escaneos
        isScanning = true; // Bloquear el escáner

        // Ejecutar la validación y registro de asistencia
        google.script.run.withSuccessHandler(function (response) {
          if (response.startsWith("Registro exitoso")) {
            showAlert(response, "alert-success");
          } else {
            showAlert(response, "alert-warning");
          }

          // Desbloquear el escáner después de 1 segundo
          setTimeout(() => {
            isScanning = false;
          }, 1000); // Esperar 1 segundo antes de permitir otro escaneo
        }).registrarAsistencia(decodedText);
      }

      function onScanError(error) {
        console.warn(error);
      }

      // Iniciar el escáner
      html5QrcodeScanner.render(onScanSuccess, onScanError);
    });
  </script>
</body>
</html>