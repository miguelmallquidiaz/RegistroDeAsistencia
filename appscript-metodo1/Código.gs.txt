function doGet() {
  let template = HtmlService.createTemplateFromFile('index');
  let html = template.evaluate().setTitle('Registro de Asistencia');
  html.setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL);
  html.addMetaTag('viewport', 'width=device-width, initial-scale=1');
  return html;
}

function include(filename) {
  return HtmlService.createHtmlOutputFromFile(filename).getContent();
}

function obtenerDatosAlumno(codigoQR) {
  var hojaAlumnos = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Alumnos");
  var datosAlumnos = hojaAlumnos.getDataRange().getValues();
  for (var i = 1; i < datosAlumnos.length; i++) {
    if (datosAlumnos[i][4] === codigoQR && datosAlumnos[i][5] === "ACTIVO") {
      return {
        AlumnoID: datosAlumnos[i][0],
        AlumnoNombre: datosAlumnos[i][1],
        GrupoID: datosAlumnos[i][2]
      };
    }
  }
  return null;
}

function registrarAsistencias(asistencias) {
  var hojaAsistencia = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Asistencia");
  if (!hojaAsistencia) {
    return "Error: No se encontró la hoja de Asistencia.";
  }

  var fecha = new Date();
  var fechaStr = Utilities.formatDate(fecha, "America/Lima", "dd/MM/yyyy");
  var horaStr = Utilities.formatDate(fecha, "America/Lima", "HH:mm:ss");

  var registrosExitosos = 0;
  var registrosDuplicados = 0;
  var registrosFueraDeHora = 0;

  var datosAsistencia = hojaAsistencia.getDataRange().getValues();

  const rangoAsistio1 = { llegadaPronto: "06:00", inicio: "07:10", fin: "12:00" };
  const rangoAsistio2 = { llegadaPronto: "22:00", inicio: "22:10", fin: "23:20" };

  function convertirHoraAMinutos(hora) {
    var partes = hora.split(":");
    return parseInt(partes[0]) * 60 + parseInt(partes[1]);
  }

  var llegadaPronto1 = convertirHoraAMinutos(rangoAsistio1.llegadaPronto);
  var inicio1 = convertirHoraAMinutos(rangoAsistio1.inicio);
  var fin1 = convertirHoraAMinutos(rangoAsistio1.fin);
  var llegadaPronto2 = convertirHoraAMinutos(rangoAsistio2.llegadaPronto);
  var inicio2 = convertirHoraAMinutos(rangoAsistio2.inicio);
  var fin2 = convertirHoraAMinutos(rangoAsistio2.fin);
  var horaActualMinutos = convertirHoraAMinutos(Utilities.formatDate(fecha, "America/Lima", "HH:mm"));

  for (var i = 0; i < asistencias.length; i++) {
    var codigoQR = asistencias[i].codigoQR;
    var ubicacion = asistencias[i].ubicacion;

    var alumno = obtenerDatosAlumno(codigoQR);
    if (!alumno) continue;

    var existeRegistro = datosAsistencia.some(function (fila) {
      return fila[1] === alumno.AlumnoID && Utilities.formatDate(new Date(fila[4]), "America/Lima", "dd/MM/yyyy") === fechaStr;
    });

    if (existeRegistro) {
      registrosDuplicados++;
      continue;
    }

    var tipoAsistencia;
    if (
      (horaActualMinutos >= llegadaPronto1 && horaActualMinutos < inicio1) ||
      (horaActualMinutos >= llegadaPronto2 && horaActualMinutos < inicio2)
    ) {
      tipoAsistencia = "ASISTIÓ";
    } else if (
      (horaActualMinutos >= inicio1 && horaActualMinutos <= fin1) ||
      (horaActualMinutos >= inicio2 && horaActualMinutos <= fin2)
    ) {
      tipoAsistencia = "TARDANZA";
    } else {
      registrosFueraDeHora++;
      continue;
    }

    var asistenciaID = Math.random().toString(36).substr(2, 8).toUpperCase();
    var nuevaFila = [
      asistenciaID,
      alumno.AlumnoID,
      alumno.AlumnoNombre,
      alumno.GrupoID,
      fechaStr,
      horaStr,
      tipoAsistencia,
      "",
      codigoQR,
      ubicacion
    ];
    hojaAsistencia.appendRow(nuevaFila);
    registrosExitosos++;
  }

  return `Registros exitosos: ${registrosExitosos}, Registros duplicados: ${registrosDuplicados}, Registros fuera de hora: ${registrosFueraDeHora}`;
}
